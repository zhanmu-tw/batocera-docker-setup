#!/bin/bash

SERVICE_NAME="Docker"
LOG_FILE="/userdata/system/docker/service.log"

log() {
    echo "[$(date)] $1" >> "$LOG_FILE"
}

case "$1" in
    start)
        log "Docker service starting..."
        
        # Set PATH so dockerd can find containerd and other binaries
        export PATH="/userdata/system/docker/bin:$PATH"
        log "PATH set to: $PATH"
        
        # Unmount cgroup v2 if present
        if mount | grep -q "cgroup2"; then
            log "Unmounting cgroup v2..."
            umount /sys/fs/cgroup 2>&1 | tee -a "$LOG_FILE"
            umount /sys/fs/cgroup 2>&1 | tee -a "$LOG_FILE"
        fi
        
        # Mount cgroup v1 (REQUIRED for Docker device access)
        if ! mount | grep -q "cgroup_root"; then
            log "Mounting cgroup v1..."
            mount -t tmpfs cgroup_root /sys/fs/cgroup 2>&1 | tee -a "$LOG_FILE"
            mkdir -p /sys/fs/cgroup/{cpuset,cpu,cpuacct,memory,devices,freezer,blkio,perf_event,pids}
            mount -t cgroup -o devices devices /sys/fs/cgroup/devices 2>&1 | tee -a "$LOG_FILE"
            mount -t cgroup -o freezer freezer /sys/fs/cgroup/freezer 2>&1 | tee -a "$LOG_FILE"
            mount -t cgroup -o perf_event perf_event /sys/fs/cgroup/perf_event 2>&1 | tee -a "$LOG_FILE"
        else
            log "Cgroup v1 already mounted"
        fi
        
        # Verify critical cgroup is mounted
        if [ ! -d /sys/fs/cgroup/devices ]; then
            log "ERROR: Failed to mount cgroup devices controller"
            exit 1
        fi
        
        log "Starting dockerd..."
        # Start Docker daemon (dockerd needs containerd in PATH)
        /userdata/system/docker/bin/dockerd \
          --data-root /userdata/docker-data \
          --exec-root /var/run/docker \
          --pidfile /var/run/docker.pid \
          --host=unix:///var/run/docker.sock \
          --userland-proxy-path=/userdata/system/docker/bin/docker-proxy \
          >> /userdata/system/docker/docker.log 2>&1 &
        
        DOCKER_PID=$!
        log "Docker service started (PID: $DOCKER_PID)"
        echo "$SERVICE_NAME started"
        ;;
    stop)
        log "Stopping Docker..."
        killall dockerd 2>/dev/null
        log "Docker stopped"
        echo "$SERVICE_NAME stopped"
        ;;
    restart)
        $0 stop
        sleep 2
        $0 start
        ;;
    status)
        if pgrep dockerd > /dev/null; then
            echo "$SERVICE_NAME is running"
        else
            echo "$SERVICE_NAME is not running"
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

exit 0