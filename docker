cat > /userdata/system/services/docker << 'EOF'
#!/bin/bash

SERVICE_NAME="Docker"

case "$1" in
    start)
        # Unmount cgroup v2 if present
        if mount | grep -q "cgroup2"; then
            umount /sys/fs/cgroup 2>/dev/null || true
            umount /sys/fs/cgroup 2>/dev/null || true
        fi
        
        # Mount cgroup v1 (REQUIRED for Docker device access)
        if ! mount | grep -q "cgroup_root"; then
            mount -t tmpfs cgroup_root /sys/fs/cgroup
            mkdir -p /sys/fs/cgroup/{cpuset,cpu,cpuacct,memory,devices,freezer,blkio,perf_event,pids}
            mount -t cgroup -o devices devices /sys/fs/cgroup/devices
            mount -t cgroup -o freezer freezer /sys/fs/cgroup/freezer
            mount -t cgroup -o perf_event perf_event /sys/fs/cgroup/perf_event
        fi
        
        # Verify critical cgroup is mounted
        if [ ! -d /sys/fs/cgroup/devices ]; then
            echo "ERROR: Failed to mount cgroup devices controller"
            exit 1
        fi
        
        # Start Docker daemon
        /userdata/system/docker/bin/dockerd \
          --data-root /userdata/docker-data \
          --exec-root /var/run/docker \
          --pidfile /var/run/docker.pid \
          --host=unix:///var/run/docker.sock \
          > /userdata/system/docker/docker.log 2>&1 &
        
        echo "$SERVICE_NAME started"
        ;;
    stop)
        killall dockerd 2>/dev/null
        echo "$SERVICE_NAME stopped"
        ;;
    restart)
        $0 stop
        sleep 2
        $0 start
        ;;
    status)
        if pgrep dockerd > /dev/null; then
            echo "$SERVICE_NAME is running"
        else
            echo "$SERVICE_NAME is not running"
        fi
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac

exit 0
EOF

# Make executable
chmod +x /userdata/system/services/docker

# Enable service (auto-start on boot)
mkdir -p /userdata/system/services/enabled
ln -sf /userdata/system/services/docker /userdata/system/services/enabled/docker